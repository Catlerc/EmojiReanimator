{"version":3,"file":"Domain.js","sourceRoot":"","sources":["Domain.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAMnC,MAAM,CAAN,IAAY,SAKX;AALD,WAAY,SAAS;IACjB,uCAAG,CAAA;IACH,uCAAG,CAAA;IACH,yCAAI,CAAA;IACJ,uCAAG,CAAA;AACP,CAAC,EALW,SAAS,KAAT,SAAS,QAKpB;AAED,MAAM,CAAN,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,mDAAG,CAAA;IACH,qDAAI,CAAA;IACJ,mDAAG,CAAA;AACP,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AAGD;IAAA;IAyBA,CAAC;IAxBU,sBAAgB,GAAvB,UAAwB,WAAwB,EAAE,IAAY;QAC1D,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,WAAW,CAAC,EAAE,EAAC,IAAI,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAC,CAAC,CAAC;QACzE,IAAM,UAAU,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC;QAClD,OAAO,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;IAEM,kBAAY,GAAnB,UAAoB,KAAa,EAAE,MAAc;QAC7C,IAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;QACjD,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAA;QACtB,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAA;QAGxB,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;IACtC,CAAC;IAEM,wBAAkB,GAAzB,UAA0B,SAAoB;QAC1C,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC/B,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QACjC,GAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAElC,OAAO,MAAM,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;IACL,YAAC;AAAD,CAAC,AAzBD,IAyBC","sourcesContent":["import {fabric} from \"./Vendor.js\";\r\n\r\nexport type Milliseconds = number\r\nexport type Seconds = number\r\nexport type DataUrl = string\r\n\r\nexport enum ImageType {\r\n    gif,\r\n    png,\r\n    jpeg,\r\n    jpg\r\n}\r\n\r\nexport enum StaticImageType {\r\n    png,\r\n    jpeg,\r\n    jpg\r\n}\r\n\r\n\r\nexport class Utils {\r\n    static arrayBufferToUrl(imageBuffer: ArrayBuffer, type: String) {\r\n        const blob = new Blob([imageBuffer], {type: \"image/\" + type.toString()});\r\n        const urlCreator = window.URL || window.webkitURL;\r\n        return urlCreator.createObjectURL(blob);\r\n    }\r\n\r\n    static createCanvas(width: number, height: number) {\r\n        const renderer = document.createElement('canvas')\r\n        renderer.width = width\r\n        renderer.height = height\r\n\r\n\r\n        return new fabric.Canvas(renderer)\r\n    }\r\n\r\n    static imageDataToDataUrl(imageData: ImageData): DataUrl {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        canvas.width = imageData.width;\r\n        canvas.height = imageData.height;\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n        return canvas.toDataURL();\r\n    }\r\n}"]}