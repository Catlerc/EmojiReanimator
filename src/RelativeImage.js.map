{"version":3,"file":"RelativeImage.js","sourceRoot":"","sources":["RelativeImage.ts"],"names":[],"mappings":"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","sourcesContent":["import {Milliseconds, Seconds} from \"./Domain.js\";\r\nimport {fabric} from \"./Vendor.js\";\r\nimport {AnimatedImage, ImageUpdateFrame} from \"./AnimatedImage.js\";\r\nimport {Utils} from \"./Utils/Utils.js\";\r\n\r\nexport interface Point {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport type Offset = Point\r\n\r\nexport interface FabricImage {\r\n  width: number,\r\n  height: number\r\n\r\n  scale(scale: number): FabricImage\r\n\r\n  getScaledWidth(): number\r\n\r\n  getScaledHeight(): number\r\n\r\n  set(options: Object): void\r\n\r\n  get(paramName: string): number\r\n\r\n  clone(callback: (image: FabricImage) => void): Promise<FabricImage>\r\n}\r\n\r\nfunction createImage(imageUrl: string): Promise<FabricImage> {\r\n  return new Promise(resolve => fabric.Image.fromURL(imageUrl, resolve))\r\n}\r\n\r\nexport interface FabricCanvas {\r\n  add(image: FabricImage): void\r\n\r\n  width: number\r\n  height: number\r\n}\r\n\r\nexport class RelativeImage {\r\n  image: AnimatedImage\r\n  fabricImage: FabricImage\r\n  canvas?: FabricCanvas\r\n  width: number\r\n  height: number\r\n  scale: number = 1\r\n\r\n  constructor(image: AnimatedImage) {\r\n    this.image = image\r\n    this.width = image.width\r\n    this.height = image.height\r\n  }\r\n\r\n  async getFabricImageForFrame(frame: ImageUpdateFrame): Promise<RelativeFabricImage> {\r\n    let fabricImage = await createImage(Utils.imageDataToDataUrl(frame.image))\r\n    fabricImage.set({\r\n      originX: \"center\",\r\n      originY: \"center\",\r\n    })\r\n    return new RelativeFabricImage(fabricImage.scale(this.scale), this.canvas)\r\n  }\r\n\r\n  rescaleToFit(width: number, height: number): void {\r\n    this.scale = Math.min(width / this.image.width, height / this.image.height)\r\n    this.width = this.width * this.scale / this.canvas.width\r\n    this.height = this.height * this.scale / this.canvas.height\r\n  }\r\n\r\n\r\n  attach(canvas: FabricCanvas) {\r\n    this.canvas = canvas\r\n  }\r\n\r\n  copy() {\r\n    const clonedRelativeImage = new RelativeImage(this.image)\r\n    clonedRelativeImage.canvas = this.canvas\r\n    clonedRelativeImage.width = this.width\r\n    clonedRelativeImage.height = this.height\r\n    if (clonedRelativeImage.canvas !== null) clonedRelativeImage.canvas.add(clonedRelativeImage.fabricImage)\r\n    return clonedRelativeImage\r\n  }\r\n}\r\n\r\n\r\nexport class RelativeFabricImage {\r\n  underlying: FabricImage\r\n  canvas: FabricCanvas\r\n  width: number\r\n  height: number\r\n\r\n  constructor(underlying: FabricImage,\r\n              canvas: FabricCanvas) {\r\n    this.underlying = underlying\r\n    this.canvas = canvas\r\n    this.width = underlying.getScaledWidth()\r\n    this.height = underlying.getScaledHeight()\r\n  }\r\n\r\n  setPos(xn: number, yn: number) {\r\n    this.underlying.set({\r\n      left: this.canvas.width * xn,\r\n      top: this.canvas.height * yn\r\n    })\r\n  }\r\n\r\n  getPos() {\r\n    return {\r\n      xr: this.underlying.get('left') / this.canvas.width,\r\n      yr: this.underlying.get('top') / this.canvas.height\r\n    }\r\n  }\r\n\r\n  async copy() {\r\n    const clonedFabricImage = await new Promise<FabricImage>(resolve => this.underlying.clone(resolve))\r\n    const clonedRelativeImage = new RelativeFabricImage(clonedFabricImage, this.canvas)\r\n    clonedRelativeImage.canvas = this.canvas\r\n    return clonedRelativeImage\r\n  }\r\n}"]}