{"version":3,"file":"RelativeFabricImage.js","sourceRoot":"","sources":["RelativeFabricImage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;IAME,6BAAY,UAAuB,EACvB,MAAoB;QAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,cAAc,EAAE,CAAA;QACxC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,eAAe,EAAE,CAAA;IAC5C,CAAC;IAED,oCAAM,GAAN,UAAO,EAAU,EAAE,EAAU;QAC3B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;YAClB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE;YAC5B,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE;SAC7B,CAAC,CAAA;IACJ,CAAC;IAED,iCAAG,GAAH,UAAI,OAAY;QACd,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;QAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAA;QAC7C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAA;IACjD,CAAC;IAED,oCAAM,GAAN;QACE,OAAO;YACL,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;YACnD,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;SACpD,CAAA;IACH,CAAC;IAEK,kCAAI,GAAV;;;;;;4BAC4B,WAAM,IAAI,OAAO,CAAc,UAAA,OAAO,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,EAA9B,CAA8B,CAAC,EAAA;;wBAA7F,iBAAiB,GAAG,SAAyE;wBACnG,WAAO,IAAI,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;;;KAC/D;IAEK,mCAAK,GAAX,UAAY,CAAS;;;;;;wBACf,MAAM,GAAqD,EAAE,CAAA;wBACxD,CAAC,GAAG,CAAC;;;6BAAE,CAAA,CAAC,GAAG,CAAC,CAAA;wBACN,WAAM,IAAI,CAAC,IAAI,EAAE,EAAA;;wBAAxB,IAAI,GAAG,SAAiB;wBAC9B,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAA;;;wBAFb,CAAC,EAAE,CAAA;;4BAI1B,WAAO,MAAM,EAAA;;;;KACd;IAED,iCAAG,GAAH,UAAI,aAAqB;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;IAC3C,CAAC;IACH,0BAAC;AAAD,CAAC,AAnDD,IAmDC","sourcesContent":["import {FabricImage} from \"../../FabricWrapper/FabricImage.js\"\r\nimport {FabricCanvas} from \"../../FabricWrapper/FabricCanvas.js\"\r\nimport {KeyValuePair} from \"../../Domain.js\";\r\n\r\nexport class RelativeFabricImage {\r\n  underlying: FabricImage\r\n  canvas: FabricCanvas\r\n  width: number\r\n  height: number\r\n\r\n  constructor(underlying: FabricImage,\r\n              canvas: FabricCanvas) {\r\n    this.underlying = underlying\r\n    this.canvas = canvas\r\n    this.width = underlying.getScaledWidth()\r\n    this.height = underlying.getScaledHeight()\r\n  }\r\n\r\n  setPos(xn: number, yn: number) {\r\n    this.underlying.set({\r\n      left: this.canvas.width * xn,\r\n      top: this.canvas.height * yn\r\n    })\r\n  }\r\n\r\n  set(options: any) {\r\n    this.underlying.set(options)\r\n    this.width = this.underlying.getScaledWidth()\r\n    this.height = this.underlying.getScaledHeight()\r\n  }\r\n\r\n  getPos() {\r\n    return {\r\n      xr: this.underlying.get(\"left\") / this.canvas.width,\r\n      yr: this.underlying.get(\"top\") / this.canvas.height\r\n    }\r\n  }\r\n\r\n  async copy() {\r\n    const clonedFabricImage = await new Promise<FabricImage>(resolve => this.underlying.clone(resolve))\r\n    return new RelativeFabricImage(clonedFabricImage, this.canvas)\r\n  }\r\n\r\n  async copyN(n: number): Promise<Array<KeyValuePair<number, RelativeFabricImage>>> {\r\n    let copies: Array<KeyValuePair<number, RelativeFabricImage>> = []\r\n    for (let i = 0; i < n; i++) {\r\n      const copy = await this.copy()\r\n      copies.push({key: i, value: copy})\r\n    }\r\n    return copies\r\n  }\r\n\r\n  get(parameterName: string): any {\r\n    return this.underlying.get(parameterName)\r\n  }\r\n}"]}