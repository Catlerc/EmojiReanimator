{"version":3,"file":"RelativeImage.js","sourceRoot":"","sources":["RelativeImage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,EAAC,KAAK,EAAC,MAAM,sBAAsB,CAAA;AAC1C,OAAO,EAAC,mBAAmB,EAAC,MAAM,0BAA0B,CAAA;AAK5D;IAQE,uBAAY,KAAoB;QAFhC,UAAK,GAAW,CAAC,CAAA;QAGf,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;QACxB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAA;IAC5B,CAAC;IAEK,8CAAsB,GAA5B,UAA6B,KAAgB;;;;;4BACzB,WAAM,KAAK,CAAC,sBAAsB,CAAC,KAAK,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAA;;wBAAjF,WAAW,GAAG,SAAmE;wBACrF,WAAW,CAAC,GAAG,CAAC;4BACd,OAAO,EAAE,QAAQ;4BACjB,OAAO,EAAE,QAAQ;yBAClB,CAAC,CAAA;wBACI,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;wBACjD,WAAO,IAAI,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,EAAA;;;;KACzD;IAED,oCAAY,GAAZ,UAAa,KAAa,EAAE,MAAc;QACxC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAC3E,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAA;IACxC,CAAC;IAGD,8BAAM,GAAN,UAAO,MAAoB;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAED,4BAAI,GAAJ;QACE,IAAM,mBAAmB,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACzD,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACxC,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACtC,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QACxC,IAAI,mBAAmB,CAAC,MAAM,KAAK,IAAI;YAAE,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAA;QACxG,OAAO,mBAAmB,CAAA;IAC5B,CAAC;IACH,oBAAC;AAAD,CAAC,AA3CD,IA2CC","sourcesContent":["import {AnimatedImage} from \"../AnimatedImage.js\"\r\nimport {Utils} from \"../../Utils/Utils.js\"\r\nimport {RelativeFabricImage} from \"./RelativeFabricImage.js\"\r\nimport {FabricCanvas} from \"../../FabricWrapper/FabricCanvas.js\"\r\nimport {FabricImage} from \"../../FabricWrapper/FabricImage.js\"\r\n\r\n\r\nexport class RelativeImage {\r\n  image: AnimatedImage\r\n  fabricImage: FabricImage\r\n  canvas?: FabricCanvas\r\n  width: number\r\n  height: number\r\n  scale: number = 1\r\n\r\n  constructor(image: AnimatedImage) {\r\n    this.image = image\r\n    this.width = image.width\r\n    this.height = image.height\r\n  }\r\n\r\n  async getFabricImageForFrame(frame: ImageData): Promise<RelativeFabricImage> {\r\n    let fabricImage = await Utils.fabricImageFromDataUrl(Utils.imageDataToDataUrl(frame))\r\n    fabricImage.set({\r\n      originX: \"center\",\r\n      originY: \"center\",\r\n    })\r\n    const scaledImage = fabricImage.scale(this.scale)\r\n    return new RelativeFabricImage(scaledImage, this.canvas)\r\n  }\r\n\r\n  rescaleToFit(width: number, height: number): void {\r\n    this.scale = Math.min(width / this.image.width, height / this.image.height)\r\n    this.width = this.width * this.scale\r\n    this.height = this.height * this.scale\r\n  }\r\n\r\n\r\n  attach(canvas: FabricCanvas) {\r\n    this.canvas = canvas\r\n  }\r\n\r\n  copy() {\r\n    const clonedRelativeImage = new RelativeImage(this.image)\r\n    clonedRelativeImage.canvas = this.canvas\r\n    clonedRelativeImage.width = this.width\r\n    clonedRelativeImage.height = this.height\r\n    if (clonedRelativeImage.canvas !== null) clonedRelativeImage.canvas.add(clonedRelativeImage.fabricImage)\r\n    return clonedRelativeImage\r\n  }\r\n}"]}