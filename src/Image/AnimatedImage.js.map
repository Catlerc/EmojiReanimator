{"version":3,"file":"AnimatedImage.js","sourceRoot":"","sources":["AnimatedImage.ts"],"names":[],"mappings":"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","sourcesContent":["import {GifFile} from \"../Vendor.js\"\r\nimport {Either, Left, Right} from \"../Utils/Either.js\"\r\nimport {ImageType, Seconds, StaticImageType} from \"../Domain.js\"\r\nimport {Utils} from \"../Utils/Utils.js\"\r\n\r\n\r\nexport enum FrameType {\r\n  ImageUpdate,\r\n  Update,\r\n  End\r\n}\r\n\r\nexport class UpdateFrame implements Frame {\r\n  type = FrameType.Update\r\n  time: Seconds\r\n\r\n  constructor(time: Seconds) {\r\n    this.time = time\r\n  }\r\n\r\n}\r\n\r\nexport class ImageUpdateFrame implements Frame {\r\n  type = FrameType.ImageUpdate\r\n  time: Seconds\r\n  image: ImageData\r\n\r\n  constructor(image: ImageData, time: Seconds) {\r\n    this.time = time\r\n    this.image = image\r\n  }\r\n}\r\n\r\nexport class EndFrame implements Frame {\r\n  type = FrameType.End\r\n  time: Seconds\r\n\r\n  constructor(time: Seconds) {\r\n    this.time = time\r\n  }\r\n}\r\n\r\nexport interface Frame {\r\n  time: Seconds\r\n  type: FrameType\r\n}\r\n\r\nexport class AnimatedImage {\r\n  type: ImageType = ImageType.gif\r\n  timeline: Array<Frame>\r\n  width: number\r\n  height: number\r\n\r\n\r\n  constructor(width: number, height: number, timeline: Array<Frame>) {\r\n    this.timeline = timeline\r\n    this.width = width\r\n    this.height = height\r\n  }\r\n\r\n  expandTimeline(length: Seconds, fps: number) {\r\n    const lastFrame = this.timeline[this.timeline.length - 1]\r\n    if (length <= lastFrame.time) return this\r\n\r\n    let newTimeline = this.timeline.slice()\r\n    newTimeline.pop() // remove EndFrame\r\n\r\n    const step = length / fps\r\n    let timer = 0\r\n    for (let i = 0; i < Math.floor(length * fps) - 1; i++) {\r\n      timer += step\r\n      newTimeline.push(new UpdateFrame(timer))\r\n    }\r\n    newTimeline.push(new EndFrame(length))\r\n    return new AnimatedImage(this.width, this.height, newTimeline.sort((a, b) => {\r\n      if (a.time < b.time) return -1\r\n      if (a.time > b.time) return 1\r\n      return 0\r\n    }))\r\n  }\r\n\r\n  static fromGIF(gifBuffer: ArrayBuffer) {\r\n    const rgbRegex = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n    const gifFile = new GifFile(gifBuffer)\r\n    let newTimeline: Array<Frame> = []\r\n    let timer = 0\r\n    gifFile.frames.forEach((frame: any) => {\r\n      const frameImageData: number[] = []\r\n      const regexResults: RegExpMatchArray[] = frame.pixelColors.map((pixelColor: string) => pixelColor.match(rgbRegex))\r\n      regexResults.forEach(pixelRegexResult => {\r\n        for (let i = 1; i <= 3; i++) frameImageData.push(Number(pixelRegexResult[i]))\r\n        frameImageData.push(255)\r\n      })\r\n      const imageData = new ImageData(new Uint8ClampedArray(frameImageData), gifFile.canvasWidth, gifFile.canvasHeight)\r\n      newTimeline.push(new ImageUpdateFrame(imageData, timer))\r\n      timer += frame.delayTime\r\n    })\r\n    newTimeline.push(new EndFrame(timer))\r\n    return new AnimatedImage(gifFile.canvasWidth, gifFile.canvasHeight, newTimeline)\r\n  }\r\n\r\n  static fromImage(imageBuffer: ArrayBuffer, extension: string): Promise<Either<Error, AnimatedImage>> {\r\n    return new Promise(async resolve => {\r\n      if (extension == \"gif\")\r\n        resolve(new Right(AnimatedImage.fromGIF(imageBuffer)))\r\n      else if (extension in StaticImageType)\r\n        resolve(new Right(await AnimatedImage.fromStaticImage(imageBuffer, extension as unknown as StaticImageType)))\r\n      else\r\n        resolve(new Left(new Error(`unsupported file extension '${extension}'`)))\r\n    })\r\n  }\r\n\r\n  static fromStaticImage(imageBuffer: ArrayBuffer, type: StaticImageType) {\r\n    const imageUrl = Utils.arrayBufferToUrl(imageBuffer, type.toString())\r\n\r\n    let image = new Image()\r\n    image.src = imageUrl\r\n    return new Promise<AnimatedImage>(resolve => {\r\n      image.onload = () => {\r\n        const canvas = document.createElement(\"canvas\")\r\n        canvas.width = image.width\r\n        canvas.height = image.height\r\n\r\n        const canvasContext = canvas.getContext(\"2d\")\r\n        canvasContext.drawImage(image, 0, 0)\r\n\r\n        const imageData = canvasContext.getImageData(0, 0, image.width, image.height)\r\n\r\n        resolve(new AnimatedImage(image.width, image.height, [\r\n          new ImageUpdateFrame(imageData, 0),\r\n          new EndFrame(0)\r\n        ]))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n"]}