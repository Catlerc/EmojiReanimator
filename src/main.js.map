{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAA;AAClC,OAAO,EAAC,WAAW,EAAC,MAAM,YAAY,CAAA;AACtC,OAAO,EAAC,aAAa,EAAC,MAAM,oBAAoB,CAAC;AAGjD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAA;AAElD,IAAI,KAAK,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAA;AAEjD,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAC,KAAU;IACxC,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAA;IACnC,IAAM,IAAI,GAAS,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACnC,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAA;IAC/B,MAAM,CAAC,SAAS,GAAG;;;;;oBACT,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA;oBAClC,WAAM,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,MAAqB,EAAE,aAAa,CAAC,EAAA;;oBAAlF,KAAK,GAAG,SAA0E;oBACxF,WAAW,CACP;wBACI,KAAK,EAAE,EAAE;wBACT,MAAM,EAAE,EAAE;wBACV,cAAc,EAAE;4BACZ,MAAM,EAAE,CAAC;4BACT,GAAG,EAAE,EAAE;yBACV;qBACJ,EACD,KAAK,CAAC,KAAK,EACX,UAAO,MAAM,EAAE,KAAK,EAAE,IAAI;;;;wCACR,WAAM,KAAK,CAAC,IAAI,EAAE,EAAA;;oCAA1B,KAAK,GAAG,SAAkB;oCAEhC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;oCAC7B,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAA;oCAEnC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;oCAC5B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;;;;yBAE/B,CACJ,CAAC,IAAI,CAAC,UAAA,KAAK;wBACJ,IAAM,MAAM,GAAqB,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAA;wBAClE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,KAAK,CAAC,CAAA;oBAC3C,CAAC,CACJ,CAAA;;;;SAGJ,CAAA;IACD,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAA;AAElC,CAAC,CAAC,CAAA","sourcesContent":["import {fabric} from \"./Vendor.js\"\r\nimport {createEmoji} from \"./Emoji.js\"\r\nimport {AnimatedImage} from \"./AnimatedImage.js\";\r\n\r\n\r\nfabric.Object.prototype.transparentCorners = false\r\n\r\nvar input = document.getElementById('file-input')\r\n// @ts-ignore\r\ninput.addEventListener('change', (event: any) => {\r\n    const fileList = event.target.files\r\n    const file: File = fileList.item(0)\r\n    const reader = new FileReader()\r\n    reader.onloadend = async () => {\r\n        const fileExtension = file.name.split('.').pop()\r\n        const image = await AnimatedImage.fromImage(reader.result as ArrayBuffer, fileExtension)\r\n        createEmoji(\r\n            {\r\n                width: 64,\r\n                height: 64,\r\n                expandTimeline: {\r\n                    length: 1,\r\n                    fps: 20\r\n                }\r\n            },\r\n            image.right,\r\n            async (canvas, image, time) => {\r\n                const clone = await image.copy()\r\n\r\n                image.setPos(time + 0.5, 0.5)\r\n                clone.setPos((time - 1) + 0.5, 0.5)\r\n\r\n                canvas.add(image.underlying)\r\n                canvas.add(clone.underlying)\r\n\r\n            }\r\n        ).then(emoji => {\r\n                const output = <HTMLImageElement>document.getElementById('output')\r\n                output.src = URL.createObjectURL(emoji)\r\n            }\r\n        )\r\n\r\n\r\n    }\r\n    reader.readAsArrayBuffer(file)\r\n\r\n})\r\n"]}