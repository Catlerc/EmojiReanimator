{"version":3,"file":"EmojiSizeWarning.js","sourceRoot":"","sources":["EmojiSizeWarning.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,mBAAmB,CAAA;AAExC;IAIE;QAFA,gBAAW,GAAwB,MAAM,CAAC,IAAI,EAAE,CAAA;QAG9C,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,iBAAiB,CAAA;QAC1C,IAAI,CAAC,IAAI,EAAE,CAAA;IACb,CAAC;IAED,qCAAU,GAAV,UAAW,WAAwB;QAAnC,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,EAA9B,CAA8B,CAAC,CAAA;QAChE,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;QAC3C,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IACnC,CAAC;IAED,yCAAc,GAAd,UAAe,WAAwB;QACrC,IAAM,IAAI,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAA;QAChD,IAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAA;QACzB,IAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAA;QACzB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,gBAAc,UAAU,QAAK,CAAA;QAC5D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,IAAI,gBAAc,UAAU,QAAK,CAAA;QAC7D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAA;IACtC,CAAC;IAED,+BAAI,GAAJ;QACE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAA;IACrC,CAAC;IAED,kCAAO,GAAP,UAAQ,GAAW;QACjB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,GAAG,CAAA;IAC9B,CAAC;IACH,uBAAC;AAAD,CAAC,AAhCD,IAgCC","sourcesContent":["import {Option} from \"./Utils/Option.js\"\r\n\r\nexport class EmojiSizeWarning {\r\n  readonly element: HTMLElement\r\n  rootElement: Option<HTMLElement> = Option.none()\r\n\r\n  constructor() {\r\n    this.element = document.createElement(\"div\")\r\n    this.element.className = \"SizeFailureSign\"\r\n    this.hide()\r\n  }\r\n\r\n  updateRoot(rootElement: HTMLElement) {\r\n    this.rootElement.forEach(root => root.removeChild(this.element))\r\n    this.rootElement = Option.some(rootElement)\r\n    rootElement.prepend(this.element)\r\n  }\r\n\r\n  updatePosition(nearElement: HTMLElement) {\r\n    const rect = nearElement.getBoundingClientRect()\r\n    const translateX = rect.x\r\n    const translateY = rect.y\r\n    this.element.style.transform = `translateY(${translateY}px)`\r\n    this.element.style.transform += `translateX(${translateX}px)`\r\n    this.element.style.display = \"block\"\r\n  }\r\n\r\n  hide() {\r\n    this.element.style.display = \"none\"\r\n  }\r\n\r\n  setText(msg: string) {\r\n    this.element.innerText = msg\r\n  }\r\n}"]}