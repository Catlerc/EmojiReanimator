{"version":3,"file":"Option.js","sourceRoot":"","sources":["Option.ts"],"names":[],"mappings":"AAAA;IACE,gBAA4B,KAAe;QAAf,UAAK,GAAL,KAAK,CAAU;IAC3C,CAAC;IAEM,WAAI,GAAX,UAAe,KAAQ;QACrB,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACjD;QACD,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAEM,WAAI,GAAX;QACE,OAAO,IAAI,MAAM,CAAI,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,gBAAS,GAAhB,UAAoB,KAAQ;QAC1B,OAAO,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAK,CAAC;IACvD,CAAC;IAED,0BAAS,GAAT,UAAU,YAAe;QACvB,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IACzD,CAAC;IAED,wBAAO,GAAP,UAAW,IAAiB;QAC1B,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;YAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IAC1C,CAAC;IAED,oBAAG,GAAH,UAAO,IAAiB;QACtB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;YAAE,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;QAC5D,OAAO,MAAM,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC;IAED,wBAAO,GAAP,UAAW,IAAyB;QAClC,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC/C,OAAO,MAAM,CAAC,IAAI,EAAE,CAAA;IACtB,CAAC;IACH,aAAC;AAAD,CAAC,AApCD,IAoCC","sourcesContent":["export class Option<T> {\r\n  private constructor(private value: T | null) {\r\n  }\r\n\r\n  static some<T>(value: T) {\r\n    if (!value) {\r\n      throw Error(\"Provided value must not be empty\");\r\n    }\r\n    return new Option(value);\r\n  }\r\n\r\n  static none<T>() {\r\n    return new Option<T>(null);\r\n  }\r\n\r\n  static fromValue<T>(value: T) {\r\n    return value ? Option.some(value) : Option.none<T>();\r\n  }\r\n\r\n  getOrElse(defaultValue: T) {\r\n    return this.value === null ? defaultValue : this.value;\r\n  }\r\n\r\n  forEach<B>(func: (a: T) => B): void {\r\n    if (this.value != null) func(this.value)\r\n  }\r\n\r\n  map<B>(func: (a: T) => B): Option<B> {\r\n    if (this.value != null) return Option.some(func(this.value))\r\n    return Option.none()\r\n  }\r\n\r\n  flatMap<B>(func: (a: T) => Option<B>): Option<B> {\r\n    if (this.value != null) return func(this.value)\r\n    return Option.none()\r\n  }\r\n}"]}