{"version":3,"file":"Application.js","sourceRoot":"","sources":["Application.ts"],"names":[],"mappings":"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","sourcesContent":["import {Emoji} from \"./Emoji.js\"\r\nimport {renderers} from \"./Renderers/Renderers.js\"\r\nimport {Seconds} from \"./Domain.js\"\r\nimport {AnimatedImage} from \"./AnimatedImage.js\"\r\nimport {Option} from \"./Utils/Option.js\";\r\nimport {Utils} from \"./Utils/Utils.js\";\r\n\r\nexport interface ExpandTimelineOptions {\r\n  length: Seconds,\r\n  fps: number\r\n}\r\n\r\nexport interface Options {\r\n  name: Option<string>\r\n  width: number\r\n  height: number\r\n  expandTimeline: Option<ExpandTimelineOptions>\r\n}\r\n\r\n\r\nexport class Application {\r\n  emojies: Emoji[]\r\n  image: Option<AnimatedImage> = Option.none()\r\n  options: Options = {\r\n    name: Option.none(),\r\n    width: 64,\r\n    height: 64,\r\n    expandTimeline: Option.none()\r\n  }\r\n\r\n  constructor(\r\n    private fileInput: HTMLInputElement,\r\n    private redrawButton: HTMLButtonElement,\r\n    private smileSizeInput: HTMLInputElement,\r\n    private compressionInput: HTMLInputElement,\r\n    private forceAnimateInput: HTMLInputElement,\r\n    private animationLengthInput: HTMLInputElement,\r\n    private fpsInput: HTMLInputElement,\r\n    private imagePreview: HTMLImageElement\r\n  ) {\r\n    this.reloadOptions()\r\n  }\r\n\r\n  initializeEvents() {\r\n    this.redrawButton.onclick = () => this.redraw()\r\n    this.smileSizeInput.onchange = () => this.reloadOptions()\r\n    this.compressionInput.onchange = () => this.reloadOptions()\r\n    this.animationLengthInput.onchange = () => this.reloadOptions()\r\n    this.fpsInput.onchange = () => this.reloadOptions()\r\n    this.forceAnimateInput.onchange = () => {\r\n      if (this.forceAnimateInput.checked) {\r\n        this.animationLengthInput.disabled = false\r\n        this.fpsInput.disabled = false\r\n      } else {\r\n        this.animationLengthInput.disabled = true\r\n        this.fpsInput.disabled = true\r\n      }\r\n\r\n      this.reloadOptions()\r\n    }\r\n    this.fileInput.onchange = (event: any) => {\r\n      const fileList = event.target.files\r\n      const file: File = fileList.item(0)\r\n      const reader = new FileReader()\r\n      reader.onloadend = () => this.onFileSelection(file, reader.result as ArrayBuffer)\r\n      reader.readAsArrayBuffer(file)\r\n    }\r\n\r\n    this.emojies = Array.from(document.getElementsByClassName(\"Emoji\")).map(\r\n      element => {\r\n        const rendererType = element.getAttribute(\"renderer\")\r\n        const renderer = renderers.get(rendererType)\r\n        const emoji = new Emoji(rendererType, renderer)\r\n        emoji.attach(element as HTMLImageElement)\r\n        return emoji\r\n      }\r\n    )\r\n  }\r\n\r\n  reloadOptions() {\r\n    const oldOptions = this.options\r\n    const size = Number(this.smileSizeInput.value)\r\n    let expandTimelineOptions = Option.none<ExpandTimelineOptions>()\r\n    if (this.forceAnimateInput.checked)\r\n      expandTimelineOptions = Option.some(\r\n        {\r\n          length: Number(this.animationLengthInput.value),\r\n          fps: Number(this.fpsInput.value)\r\n        }\r\n      )\r\n    this.options = {\r\n      name: oldOptions.name,\r\n      width: size,\r\n      height: size,\r\n      expandTimeline: expandTimelineOptions\r\n    }\r\n  }\r\n\r\n  redraw() {\r\n    this.image.forEach(image =>\r\n      this.emojies.forEach(emoji => {\r\n        emoji.imageElement.map(element => element.src = \"resources/loading.gif\")\r\n        emoji.render(this.options, image)\r\n      }))\r\n\r\n  }\r\n\r\n  async onFileSelection(file: File, data: ArrayBuffer) {\r\n    const fileExtension = file.name.split('.').pop()\r\n    const image = await AnimatedImage.fromImage(data, fileExtension)\r\n\r\n    this.imagePreview.src = Utils.arrayBufferToUrl(data, fileExtension)\r\n    this.image = Option.some(image.right)\r\n    this.redraw()\r\n  }\r\n}"]}