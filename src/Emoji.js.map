{"version":3,"file":"Emoji.js","sourceRoot":"","sources":["Emoji.ts"],"names":[],"mappings":"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","sourcesContent":["import {GifEncoder} from \"./Vendor.js\"\r\nimport {FabricCanvas, RelativeFabricImage, RelativeImage} from \"./RelativeImage.js\"\r\nimport {AnimatedImage, FrameType, ImageUpdateFrame} from \"./AnimatedImage.js\";\r\nimport {Milliseconds, Renderer, Seconds} from \"./Domain.js\";\r\nimport {Option} from \"./Utils/Option.js\";\r\nimport {Options} from \"./Application.js\";\r\nimport {Utils} from \"./Utils/Utils.js\";\r\n\r\n\r\ninterface GifEncoderFrameOptions {\r\n  delay: Milliseconds\r\n}\r\n\r\ninterface GifEncoder {\r\n  addFrame(imageData: ImageData, options: GifEncoderFrameOptions): void\r\n\r\n  on(eventName: string, func: (event: any) => any): void\r\n\r\n  render(): void\r\n}\r\n\r\n\r\nexport class Emoji {\r\n  namePostfix: string\r\n  renderedGif: Option<Blob> = Option.none()\r\n  renderer: Renderer\r\n  imageElement: Option<HTMLImageElement> = Option.none()\r\n\r\n  constructor(namePostfix: string, renderer: Renderer) {\r\n    this.namePostfix = namePostfix\r\n    this.renderer = renderer\r\n  }\r\n\r\n  attach(imageElement: HTMLImageElement) {\r\n    this.imageElement = Option.some(imageElement)\r\n  }\r\n\r\n  updateAttachedImageElement() {\r\n    this.imageElement.flatMap(\r\n      imageElement => this.renderedGif.map(gif => imageElement.src = Utils.imageBlobToDataUrl(gif))\r\n    )\r\n  }\r\n\r\n  async render(\r\n    options: Options,\r\n    imageRaw: AnimatedImage\r\n  ) {\r\n    let image = imageRaw\r\n    options.expandTimeline.map(expandTimelineOptions =>\r\n      image = image.expandTimeline(expandTimelineOptions.length, expandTimelineOptions.fps)\r\n    )\r\n\r\n\r\n    const canvas = Utils.createCanvas(options.width, options.height)\r\n    const gifEncoder: GifEncoder = new GifEncoder({\r\n      workers: 2,\r\n      quality: 100,\r\n      background: 0xFFFFFF,\r\n      width: options.width,\r\n      height: options.height,\r\n      workerScript: \"./vendor/gif.worker.js\"\r\n    })\r\n\r\n    const relativeImage = new RelativeImage(image)\r\n    relativeImage.attach(canvas)\r\n    relativeImage.rescaleToFit(options.width, options.height)\r\n\r\n    let oldImage: RelativeFabricImage\r\n    for (let frameIndex = 0; frameIndex < image.timeline.length - 1; frameIndex++) {\r\n      const frame = image.timeline[frameIndex]\r\n      const nextFrame = image.timeline[frameIndex + 1]\r\n      const delay = (nextFrame.time - frame.time) * 1000\r\n      const timeNormalized = frameIndex / (image.timeline.length - 1)\r\n\r\n      if (frame.type == FrameType.ImageUpdate) {\r\n        oldImage = await relativeImage.getFabricImageForFrame(frame as ImageUpdateFrame)\r\n      }\r\n\r\n      canvas.clear()\r\n      canvas.setBackgroundColor('#FFFFFF', null)\r\n\r\n      await this.renderer(canvas, oldImage, timeNormalized)\r\n\r\n      canvas.renderAll()\r\n\r\n      gifEncoder.addFrame(\r\n        canvas.contextContainer.getImageData(0, 0, options.width, options.height),\r\n        {delay: delay}\r\n      )\r\n    }\r\n\r\n    return new Promise(\r\n      resolve => {\r\n        gifEncoder.on('finished', (gif: Blob) => {\r\n          this.renderedGif = Option.some(gif)\r\n          this.updateAttachedImageElement()\r\n          resolve(gif)\r\n        })\r\n        gifEncoder.render()\r\n      })\r\n  }\r\n}\r\n"]}